version: '3.8'

services:
  mssql-server:
    container_name: mssql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: yO8N%CKA]c]0Hum*
    ports:
      - "8000:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - ums_network

  ums-instance-1:
    container_name: ums-instance-1
    build:
      context: .
      dockerfile: UMS.Api/Dockerfile
    ports:
      - "8001:80"
    networks:
      - ums_network
    depends_on:
      - mssql-server
    environment:
      - "ConnectionStrings__UMSDbConnection=Server=mssql-server;Database=UMS;User Id=SA;Password=yO8N%CKA]c]0Hum*;TrustServerCertificate=True"

  ums-instance-2:
    container_name: ums-instance-2
    build:
      context: .
      dockerfile: UMS.Api/Dockerfile
    ports:
      - "8002:80"
    networks:
      - ums_network
    depends_on:
      - mssql-server
    environment:
      - "ConnectionStrings__UMSDbConnection=Server=mssql-server;Database=UMS;User Id=SA;Password=yO8N%CKA]c]0Hum*;TrustServerCertificate=True"

  ums-instance-3:
    container_name: ums-instance-3
    build:
      context: .
      dockerfile: UMS.Api/Dockerfile
    ports:
      - "8003:80"
    networks:
      - ums_network
    depends_on:
      - mssql-server
    environment:
      - "ConnectionStrings__UMSDbConnection=Server=mssql-server;Database=UMS;User Id=SA;Password=yO8N%CKA]c]0Hum*;TrustServerCertificate=True"

  nginx:
    container_name: nginx-load-balancer
    image: nginx:latest
    ports:
      - "5019:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ums-instance-1
      - ums-instance-2
      - ums-instance-3
    networks:
      - ums_network

networks:
  ums_network:
    name: ums_network

volumes:
  mssql-data: